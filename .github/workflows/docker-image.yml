name: ci

env: 
  DOCKERHUBACCOUNT: "alehmudrak"
  DOCKERREPOSITORY: "github-action"
  SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

on:

  create:
    tag:

  push:
    branches:
      - 'main'

  workflow_dispatch:
    inputs:
#       deploy:
#         description: 'Deploy? (yes/no).'
# #        default: 'yes'
#         required: true
      tag_version:
        description: 'Existing TAG?(v0.1/v0.2)'
        required: false     


jobs:
  TestGitTag: 
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - id: release
        uses: rymndhng/release-on-push-action@master
        with:
          bump_version_scheme: minor
          tag_prefix: v
          
      - name: Check Output Parameters
        run: |
          echo "Got tag name ${{ steps.release.outputs.tag_name }}"
          echo "Got release version ${{ steps.release.outputs.version }}"


# jobs:

# # Test and build
#   myCI:
#     runs-on: ubuntu-latest
#     steps:

# # Send message in Slack
#       - uses: act10ns/slack@v1
#         with:
#           status: starting
#           channel: '#test-chat-ops'
#           message: |
#             ----  Pipeline started.  ----
#             Vars: workflow_dispatch=${{ github.event.inputs.deploy }}
#         if: always()


# # Save DockerHub path
#       - name: Save DockerHub_Path
#         run: |          
#           echo $DOCKERHUBACCOUNT > DOCKERHUBACCOUNT.txt
#           echo $DOCKERREPOSITORY > DOCKERREPOSITORY.txt
#           ./github-ci/version.sh

#       - name: Export Branch-Hash
#         id: Export_Branch_Version
#         run: |          
#           ./github-ci/branch_version.sh

#       - name: Export Tag-version
#         id: Export_Git_Version
#         if: ${{ startsWith(github.ref, 'refs/tags/v') }}
#         run: |
#           ./github-ci/tag_version.sh

# # Test NPM
#       - name: Install dependencies
#         id: Installing_NPM_Dependencies
#         run: |
#           echo "--- INSTALLING DEPENDENCIES ---"
#           npm install --no-audit
      
#       - name: Run unit tests
#         id: Unit_Tests
#         run: |
#           echo "--- RUNNING UNIT TESTS ---"
#           npm test 

# # Build image
#       - name: Build the Docker image
#         id: Build_Docker_image
#         run: |
#           echo "--- Build image ---"
#           ./github-ci/build.sh

# # Send message in Slack
#       - uses: act10ns/slack@v1
#         with:
#           status: ${{ job.status }}
#           steps: ${{ toJson(steps) }}
#           channel: '#test-chat-ops'
#           message: Docker Build Successful
#         if: always()

# # --- Deploy --- Build and push ---
#   Deploy:
#     if: ${{ github.event_name == 'push' }} && ${{ github.event_name == 'workflow_dispatch'}}
#     needs: myCI
#     runs-on: ubuntu-latest
#     steps:

# # Send message in Slack
#       - uses: act10ns/slack@v1
#         with:
#           status: starting
#           channel: '#test-chat-ops'
#           message: Starting Deploy...
#         if: always()

# # Clone main repository
#       - uses: actions/checkout@v2
# # Clone repository with script
#       - uses: actions/checkout@v2
#         with:
#           repository: amin-serafat/github-ci
#           token: ${{ secrets.ACCESS_TOKEN }}
#           path: github-ci


#       - name: Test Git TAG
#         id: TEST_Git_Version
#         run: |
#           cat .git/packed-refs


#           # git tag
#           # echo "View last tag: $(git describe --tags --abbrev=0 | sed 's/[^.0-9]*//g')"
#           # git status


# # Save DockerHub path
#       - name: Save DockerHub_Path
#         id: Save_DOCKER_HUB
#         run: |          
#           echo $DOCKERHUBACCOUNT > DOCKERHUBACCOUNT.txt
#           echo $DOCKERREPOSITORY > DOCKERREPOSITORY.txt
#           ./github-ci/version.sh

#       - name: Export Branch-Hash
#         id: Export_Branch_Version
#         run: |          
#           ./github-ci/branch_version.sh
#           echo $(cat /version/tag_version.txt)

#       - name: Export Version
#         id: Export_Git_Version
#         if: ${{ startsWith(github.ref, 'refs/tags/v') }}
#         run: |
#           ./github-ci/tag_version.sh
#           echo $(cat /version/tag_version.txt)

# # Build image
#       - name: Build the Docker image
#         if: ${{ github.event.inputs.deploy == 'yes'}}
#         id: Build_Docker_image
#         run: |
#           echo "--- Build image ---"
#           ./github-ci/build.sh

# # Push in Docker Hub
#       - name: Push image
#         if: ${{ github.event.inputs.deploy == 'yes'}}
#         id: Build_Push_image
#         run: |    
#           echo "--- Push image ---"
#           docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" -p "${{ secrets.DOCKERHUB_TOKEN }}"
#           ./github-ci/push.sh

# # Send message in Slack
#       - uses: act10ns/slack@v1
#         with:
#           status: ${{ job.status }}
#           steps: ${{ toJson(steps) }}
#           channel: '#test-chat-ops'
#           message: Deploy finished.
#         if: always()

# # --- CD --- Pull and Run ---
#   CD:
#     if: ${{ github.event_name == 'push' }} && ${{ github.event_name == 'workflow_dispatch'}}
#     needs: Deploy
#     runs-on: ubuntu-latest
#     steps:

# # Send message in Slack
#       - uses: act10ns/slack@v1
#         with:
#           status: starting
#           channel: '#test-chat-ops'
#           message: Starting Docker Pull and Run...
#         if: always()

# # Clone main repository
#       - uses: actions/checkout@v2
# # Clone repository with script
#       - uses: actions/checkout@v2
#         with:
#           repository: amin-serafat/github-ci
#           token: ${{ secrets.ACCESS_TOKEN }}
#           path: github-ci

# # Save DockerHub path
#       - name: Save DockerHub_Path
#         id: Save_DOCKER_HUB
#         run: |          
#           echo $DOCKERHUBACCOUNT > DOCKERHUBACCOUNT.txt
#           echo $DOCKERREPOSITORY > DOCKERREPOSITORY.txt
#           ./github-ci/version.sh

#       - name: Export Branch-Hash
#         id: Export_Branch_Version
#         run: |          
#           ./github-ci/branch_version.sh

#       - name: Export Version
#         id: Export_Git_Version
#         if: ${{ startsWith(github.ref, 'refs/tags/v') }}
#         run: |
#           ./github-ci/tag_version.sh

# # Pull from Docker Hub
#       - name: Pull image
#         id: Build_Pull_image
#         if: ${{ github.event.inputs.deploy == 'yes'}}
#         run: |    
#           echo "--- Pull image ---"
#           docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" -p "${{ secrets.DOCKERHUB_TOKEN }}"
#           ./github-ci/pull.sh

# # Run container
#       - name: Run image
#         id: Build_Run_image
#         if: ${{ github.event.inputs.deploy == 'yes'}}
#         run: |    
#           echo "--- Run_image ---"
#           ./github-ci/run.sh

# # Send message in Slack
#       - uses: act10ns/slack@v1
#         with:
#           status: ${{ job.status }}
#           steps: ${{ toJson(steps) }}
#           channel: '#test-chat-ops'
#           message: "==== Finished CD. ====="
#         if: always()