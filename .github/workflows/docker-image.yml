name: ci

env: 
  MYREGISTRY: "alehmudrak"
  MYAPPLICATION: "github-action"

on:

  create:
    tag:

  push:
    branches:
      - 'main'

jobs:

# Test and build
  myCI:
    runs-on: ubuntu-latest
    steps:

# Clone main repository
      - uses: actions/checkout@v2
# Clone repository with script
      - uses: actions/checkout@v2
        with:
          repository: amin-serafat/github-ci
          token: ${{ secrets.ACCESS_TOKEN }}
          path: github-ci

# Save DockerHub path
      - name: Save DockerHub_Path
        id: Save_DOCKER_HUB
        run: |          
          echo "$MYREGISTRY/$MYAPPLICATION:" > DOCKER_HUB.txt
          ./github-ci/version.sh

      - name: Export Branch-Hash
        id: Export_Branch_Hash
        run: |          
          ./github-ci/branch_version.sh

      - name: Export Version
        id: Export_Version
        if: ${{ startsWith(github.ref, 'refs/tags/v') }}
        run: |
          ./github-ci/teg_version.sh


# Build image
      - name: Build the Docker image
        run: |
          echo "--- Build image ---"
          echo "From file /version/version.txt:"
          cat /version/version.txt
          ./github-ci/build.sh


# --- Deploy --- Build and push ---
  Deploy:
    if: ${{ startsWith(github.ref, 'refs/tags/v') }} == true
    needs: myCI
    runs-on: ubuntu-latest
    steps:

# Clone main repository
      - uses: actions/checkout@v2
# Clone repository with script
      - uses: actions/checkout@v2
        with:
          repository: amin-serafat/github-ci
          token: ${{ secrets.ACCESS_TOKEN }}
          path: github-ci

# Save DockerHub path
      - name: Save DockerHub_Path
        id: Save_DOCKER_HUB
        run: |          
          echo "$MYREGISTRY/$MYAPPLICATION:" > DOCKER_HUB.txt
          ./github-ci/version.sh

      - name: Export Branch-Hash
        id: Export_Branch_Hash
        run: |          
          ./github-ci/branch_version.sh

      - name: Export Version
        id: Export_Version
        if: ${{ startsWith(github.ref, 'refs/tags/v') }}
        run: |
          ./github-ci/teg_version.sh

# Build image
      - name: Build the Docker image
        run: |
          echo "--- Build image ---"
          echo "From file /version/version.txt:"
          cat /version/version.txt
          ./github-ci/build.sh

# Docker Login
      - uses: Azure/docker-login@v1
        id: Docker_Login
        with:
          login-server: ${{ steps.myGetSecretAction.outputs.ACR-LOGINSERVER }}
          username: ${{ steps.myGetSecretAction.outputs.ACR-USERNAME }}
          password: ${{ steps.myGetSecretAction.outputs.ACR-PASSWORD }}  

# Push in Docker Hub
      - name: Push image
        run: |    
          echo "--- Push image ---"
          docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" -p "${{ secrets.DOCKERHUB_TOKEN }}"
          ./github-ci/push.sh